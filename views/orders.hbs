<!-- 主要內容 -->
<div class="mt-5">

  <div class="card border-0 px-2">

    <!-- <div class="container py-4"> -->
    <!-- 1. 標題 & 搜尋 + 按鈕 -->
    <div class="card-header bg-white bg-transparent d-flex">
      <div class="input-group me-2">
        <span class="input-group-text border-0 bg-transparent">
          <i class="bi bi-search"></i>
        </span>
        <input type="search" class="form-control shadow-none">
      </div>


      <div class="btn-sm bg-dark rounded">
        <button type="button" class="btn btn-dark text-nowrap" disabled>+ 新增訂單</button>
      </div>
    </div>

    <!-- 2. 篩選區 -->
    <div class="d-flex flex-wrap gap-2 mb-4 mt-2">
      <!-- 訂單狀態 -->
      <div class="dropdown">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterOrderStatus"
          data-bs-toggle="dropdown" aria-expanded="false">
          所有訂單狀態
        </button>
        <ul class="dropdown-menu" aria-labelledby="filterOrderStatus">
          <li><a class="dropdown-item" href="#">訂單成立</a></li>
          <li><a class="dropdown-item" href="#">待出貨</a></li>
          <li><a class="dropdown-item" href="#">已申請退貨</a></li>
          <li><a class="dropdown-item" href="#">已同意退貨</a></li>
          <li><a class="dropdown-item" href="#">已出貨</a></li>
        </ul>
      </div>
      <!-- 付款狀態 -->
      <div class="dropdown">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterPaymentStatus"
          data-bs-toggle="dropdown" aria-expanded="false">
          所有付款狀態
        </button>
        <ul class="dropdown-menu" aria-labelledby="filterPaymentStatus">
          <li><a class="dropdown-item" href="#">已付款</a></li>
          <li><a class="dropdown-item" href="#">已退款</a></li>
          <li><a class="dropdown-item" href="#">已取消授權</a></li>
        </ul>
      </div>
      <!-- 運送狀態 -->
      <div class="dropdown">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterDeliveryStatus"
          data-bs-toggle="dropdown" aria-expanded="false">
          所有運送狀態
        </button>
        <ul class="dropdown-menu" aria-labelledby="filterDeliveryStatus">
          <li><a class="dropdown-item" href="#">尚未收貨</a></li>
          <li><a class="dropdown-item" href="#">處理中</a></li>
          <li><a class="dropdown-item" href="#">運送中</a></li>
          <li><a class="dropdown-item" href="#">已到貨</a></li>
          <li><a class="dropdown-item" href="#">已退貨</a></li>
        </ul>
      </div>
      <!-- 選擇日期 -->
      <div>
        <input type="date" class="form-control" placeholder="選擇日期" aria-label="選擇日期" />
      </div>
      <!-- 金額篩選 -->
      <div class="dropdown">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="filterAmount"
          data-bs-toggle="dropdown" aria-expanded="false">
          所有金額
        </button>
        <ul class="dropdown-menu" aria-labelledby="filterAmount">
          <li><a class="dropdown-item" href="#">$0 - $10</a></li>
          <li><a class="dropdown-item" href="#">$10 - $20</a></li>
          <li><a class="dropdown-item" href="#">$20 以上</a></li>
        </ul>
      </div>
    </div>

    <!-- 3. 資料表 -->
    <div class="table-responsive">
      <table class="table table-hover align-middle">
        <thead class="table-light">
          <tr>
            <th scope="col"><input type="checkbox" /></th>
            <th scope="col">訂單編號</th>
            <th scope="col">客戶</th>
            <th scope="col">日期</th>
            <th scope="col">訂單狀態</th>
            <th scope="col">付款狀態</th>
            <th scope="col">運送狀態</th>
            <th scope="col">金額</th>
            <th scope="col">操作</th>
          </tr>
        </thead>
        <tbody>
          <!-- 後端取得資料渲染訂單列表 -->
        </tbody>

      </table>
    </div>

    <!-- 4. 資料筆數 & 分頁 -->
    <nav class="mt-2" aria-label="Page navigation example">
      <ul class="pagination justify-content-center pagination-white">
        <!-- 這裡的 <li> 會由 JS 動態生成 -->
      </ul>
    </nav>

    <!-- 串接 API -->
    <!-- API 功能：取得所有訂單的列表 (可選日期範圍參數) -->
    <script>
      document.addEventListener("DOMContentLoaded", async () => {
        const tbody = document.querySelector("tbody");
        const paginationContainer = document.querySelector(".pagination");

        const API_BASE_URL = window.API_BASE_URL || "http://localhost:3000/api/admin";
        const token = localStorage.getItem("adminToken");

        // 封裝呼叫 API 的函式
        async function fetchOrders(params = {}) {
          const url = new URL(`${API_BASE_URL}/admin/orders`);
          Object.entries(params).forEach(([key, value]) => {
            if (value) url.searchParams.append(key, value);
          });
          console.log("🚀 request URL: ", url.toString());

          const res = await fetch(url.toString(), {
            headers: {
              Authorization: `Bearer ${token}`
            }
          });
          const result = await res.json();
          if (!result.status) return;

          renderOrders(result.data.orders);
          renderPagination(result.data.pagination);
        }

        // 渲染訂單資料
        function renderOrders(orders) {
          console.log("👀 正在渲染的 orders[0]：", orders[0]);
          tbody.innerHTML = "";
          orders.forEach(order => {
            console.log({ order });
            const tr = document.createElement("tr");
            tr.innerHTML = `
            <td><input type="checkbox" /></td>            
            <td class="text-start">
              <a href="/ordersDetail?orderNumber=${order.orderNumber}">#${order.orderNumber}</a>
            </td>                 
            <td class="text-start">${order.userName}</td>
            <td>${order.createdAt.split("T")[0]}</td>
            <td><span class="badge ${getBadgeClass(order.orderStatus)}">${getLabel(order.orderStatus)}</span></td>
            <td><span class="badge ${getBadgeClass(order.paymentStatus)}">${getLabel(order.paymentStatus)}</span></td>
            <td><span class="badge ${getBadgeClass(order.shippingStatus)}">${getLabel(order.shippingStatus)}</span></td>
            <td>$${order.finalAmount.toFixed(0)}</td>
            <td>
              <div class="dropdown">
                <button class="btn btn-link text-dark p-0" data-bs-toggle="dropdown">
                  <i class="bi bi-three-dots-vertical"></i>
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                  <li><a class="dropdown-item" href="/ordersEdit?orderNumber=${order.orderNumber}"><i class="bi bi-pencil me-2"></i>編輯</a></li>
                  <li><hr class="dropdown-divider" /></li>
                  <li><a class="dropdown-item text-danger" href="#" onclick="return confirm('確定要刪除嗎？')"><i class="bi bi-trash me-2"></i>刪除</a></li>
                </ul>
              </div>
            </td>
          `;
            tbody.appendChild(tr);
          });
        }

        // 分頁渲染
        function renderPagination(pagination) {
          const { page, totalPages } = pagination;
          let html = "";

          html += `<li class="page-item ${page === 1 ? 'disabled' : ''}"><a class="page-link" href="#" data-page="${page - 1}">&laquo;</a></li>`;

          for (let i = 1; i <= totalPages; i++) {
            html += `<li class="page-item ${i === page ? 'active' : ''}"><a class="page-link" href="#" data-page="${i}">${i}</a></li>`;
          }

          html += `<li class="page-item ${page === totalPages ? 'disabled' : ''}"><a class="page-link" href="#" data-page="${page + 1}">&raquo;</a></li>`;

          paginationContainer.innerHTML = html;

          // 綁定事件
          paginationContainer.querySelectorAll(".page-link").forEach(link => {
            link.addEventListener("click", e => {
              e.preventDefault();
              const targetPage = Number(e.target.dataset.page);
              if (!isNaN(targetPage)) {
                fetchOrders({ page: targetPage });
              }
            });
          });
        }

        // 狀態對應中文 & 樣式
        function getLabel(key) {
          const map = {
            // 訂單狀態
            pending: "待出貨",
            shipped: "已出貨",
            completed: "已完成",
            cancelled: "已取消",
            returnRequested: "已申請退貨",
            returnAccepted: "已同意退貨",
            returnRejected: "已拒絕退貨",

            // 付款狀態
            // unpaid: "未付款", // 不需要，因為只有付款成功才會有正式訂單
            paid: "已付款",
            refunded: "已退款",
            authorizationVoided: "已取消授權",

            // 運送狀態
            notReceived: "尚未收貨",
            processing: "處理中",
            inTransit: "運送中",
            delivered: "已到貨",
            returned: "已退貨",
          };
          return map[key] || key;
        }

        function getBadgeClass(key) {
          const colorMap = {
            // 訂單狀態
            "訂單成立": "bg-info text-dark",
            "待出貨": "bg-warning text-dark",
            "已出貨": "bg-primary text-white",
            "已完成": "bg-success text-white",
            "已取消": "bg-secondary text-white",
            "退貨申請": "bg-warning text-dark",
            "退貨接受": "bg-primary text-white",
            "退貨駁回": "bg-danger text-white",

            // 付款狀態
            // "未付款": "bg-danger text-white",
            "已付款": "bg-success text-white",
            "已退款": "bg-secondary text-white",
            "付款作廢": "bg-secondary text-white",

            // 運送狀態
            "尚未收貨": "bg-secondary text-white",
            "處理中": "bg-info text-dark",
            "運送中": "bg-primary text-white",
            "已到貨": "bg-success text-white",
            "已退貨": "bg-danger text-white",
          };
          return colorMap[key] || "bg-dark";
        }

        // 頁面初始加載
        fetchOrders({ page: 1 });
      });
    </script>