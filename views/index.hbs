<!-- 主要內容 -->
<div class="mt-5 vh-100">
  <div class="row mx-auto row-cols-4 g-4 mb-4">
    <div class="col">
      <div class="card">
        <div class="card-body text-end">
          <div class="card-subtitle d-flex justify-content-between h6">
            <p class="">本月收入</p>
            <!-- <strong>$</strong> -->
            <i class="bi bi-currency-dollar"></i>
          </div>

          <strong id="monthlyRevenue" class="h3 d-block"></strong>

          <!-- <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the
                                      card's content.
                                    </p> -->
          <h7 id="revenueGrowth" class="text-muted"></h7>
        </div>
      </div>
    </div>

    <div class="col">
      <div class="card">
        <div class="card-body text-end">
          <div class="card-subtitle d-flex justify-content-between h6">
            <p class="">圖書銷量</p>
            <!-- <strong>$</strong> -->
            <i class="bi bi-book"></i>
          </div>

          <strong id="bookSales" class="h3 d-block"></strong>


          <h7 id="bookSalesGrowth" class="text-muted"></h7>
        </div>
      </div>
    </div>

    <div class="col">
      <div class="card">
        <div class="card-body text-end">
          <div class="card-subtitle d-flex justify-content-between h6">
            <p class="">訂單數量</p>
            <!-- <strong>$</strong> -->
            <i class="bi bi-cart"></i>
          </div>

          <strong id="totalOrders" class="h3 d-block"></strong>
          <h7 id="orderGrowth" class="text-muted"></h7>
        </div>
      </div>
    </div>

    <div class="col">
      <div class="card">
        <div class="card-body text-end">
          <div class="card-subtitle d-flex justify-content-between h6">
            <p class="">當前月份</p>
            <!-- <strong>$</strong> -->
            <i class="bi bi-calendar"></i>
          </div>

          <strong id="currentYearMonth" class="h3 d-block"></strong>
          <!-- <h7 class="text-muted">較上月增長 20.8 %</h7> -->
        </div>
      </div>
    </div>

  </div>

  <!-- Chart -->

  <div class="row mx-auto">
    <div class="col">
      <div class="card">
        <div class="car-body">
          <canvas id="bar-chart" class="img-fluid"></canvas>
        </div>
      </div>
    </div>

    <div class="col-4">
      <div class="card">
        <div class="card-body">
          <canvas id="pie-chart" class="img-fluid"></canvas>
        </div>
      </div>
    </div>
  </div>

</div>

<!-- 串接 API -->
<!-- 取得首頁統計資訊、Chart JS code -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    // ====== 步驟 1：先從 localStorage 拿到 JWT token ======
    const token = localStorage.getItem('adminToken');
    if (!token) {
      console.error('找不到 token，請先登入拿到 JWT 再呼叫 /admin/dashboard');
      return;
    }

    // ====== 步驟 2：向後端 /admin/dashboard API 拿資料 ======    
    let json;
    console.log(`HERE：${window.API_BASE_URL}`)
    try {
      const resp = await fetch(`${window.API_BASE_URL}/admin/dashboard`, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (resp.status === 401) {
        console.error('伺服器回傳 401：Token 無效或已過期');
        return;
      }

      json = await resp.json();
      if (!json.status) {
        console.error('API 回傳失敗：', json);
        return;
      }
    } catch (err) {
      console.error('fetch /admin/dashboard 發生錯誤：', err);
      return;
    }

    // ====== 步驟 3：解構出 monthlySales 與 salesByCategory ======
    const { monthlySales, salesByCategory, summary } = json.data;

    console.log(summary);
    // monthlySales.labels → ['Jan','Feb',…,'Dec']
    // monthlySales.revenue → [ 數字 x12 ]
    // salesByCategory → { '科學知識': 120, '動物': 95, … }

    // ====== 步驟 4：定義顏色對照表 ======
    const chartColors = {
      red: 'rgb(255, 99, 132)',
      orange: 'rgb(255, 159, 64)',
      yellow: 'rgb(255, 205, 86)',
      green: 'rgb(75, 192, 192)',
      blue: 'rgb(54, 162, 235)',
      purple: 'rgb(153, 102, 255)',
      grey: 'rgb(201, 203, 207)'
    };

    // ====== 步驟 5：組裝 Bar Chart 資料 ======
    const barLabels = monthlySales.labels;      // ['Jan','Feb',…,'Dec']
    const barData = monthlySales.revenue;     // [數字,數字,…]
    // 這裡準備 12 種顏色，若分類數量少於 12，就會自動循環
    const barColors = [
      chartColors.red, chartColors.orange, chartColors.yellow,
      chartColors.green, chartColors.blue, chartColors.purple,
      chartColors.red, chartColors.orange, chartColors.yellow,
      chartColors.green, chartColors.blue, chartColors.purple
    ];

    const barConfig = {
      type: 'bar',
      data: {
        labels: barLabels,
        datasets: [{
          label: '月營收',
          data: barData,
          backgroundColor: barColors
        }]
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              callback: value => value.toLocaleString()  // 千分位顯示
            }
          }
        }
      }
    };

    // ====== 步驟 6：組裝 Pie Chart 資料 ======
    const pieLabels = Object.keys(salesByCategory);   // ['科學知識','動物',…]
    const pieData = Object.values(salesByCategory); // [120,95,…]
    // 根據分類數量動態挑選顏色（超過時循環使用）
    const pieColors = [];
    const colorKeys = Object.keys(chartColors);
    for (let i = 0; i < pieLabels.length; i++) {
      pieColors.push(chartColors[colorKeys[i % colorKeys.length]]);
    }

    const pieConfig = {
      type: 'pie',
      data: {
        labels: pieLabels,
        datasets: [{
          label: '各分類書籍銷量佔比',
          data: pieData,
          backgroundColor: pieColors
        }]
      },
      options: {
        responsive: true
      }
    };

    // ====== 步驟 7：繪製兩張圖表 ======
    const barCtx = document.getElementById('bar-chart').getContext('2d');
    const pieCtx = document.getElementById('pie-chart').getContext('2d');

    new Chart(barCtx, barConfig);
    new Chart(pieCtx, pieConfig);

    // Card Informations
    // 本月收入
    document.getElementById('monthlyRevenue').textContent =
      `$${summary.revenue.toLocaleString()}`;
    document.getElementById('revenueGrowth').textContent =
      `較上月增長 ${summary.revenueGrowth}`;

    // 圖書銷量
    document.getElementById('bookSales').textContent =
      summary.bookSales.toLocaleString();
    document.getElementById('bookSalesGrowth').textContent =
      `較上月增長 ${summary.bookSalesGrowth}`;

    // 訂單數量
    document.getElementById('totalOrders').textContent =
      summary.totalOrders.toLocaleString();
    document.getElementById('orderGrowth').textContent =
      `較上月增長 ${summary.orderGrowth}`;

    // 當前月份
    document.getElementById('currentYearMonth').textContent =
      summary.currentYearMonth;
  })
  // ()();
</script>